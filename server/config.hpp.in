#pragma once

#include <chrono>
#include <cmath>
#include <string>
#include "tools.hpp"


constexpr unsigned int VERSION_MAJOR = @VERSION_MAJOR@;
constexpr unsigned int VERSION_MINOR = @VERSION_MINOR@;

enum class BuildType {
    DEBUG, RELEASE
};
constexpr const char *BUILD_TYPE_AS_STRING = "@CMAKE_BUILD_TYPE@";
constexpr BuildType BUILD_TYPE = []() {
    constexpr const char *buildType = BUILD_TYPE_AS_STRING;
    constexpr bool isRelease = equal(buildType, "Release");
    if constexpr (isRelease) {
        return BuildType::RELEASE;
    }
    return BuildType::DEBUG;
}();

using port_t = std::uint16_t;
constexpr port_t DEFAULT_PORT = 8888;

constexpr const char *LOGDATE_LOCALE = "en_US.UTF8";
constexpr const char *LOGDATE_FORMAT = "%d/%b/%Y:%H:%M:%S %z";

enum class CryptoLevel {
    FAST, HIGH, ACADEMIC
};
constexpr CryptoLevel CRYPTO_LEVEL = CryptoLevel::FAST;

using byte = std::uint8_t;

constexpr std::chrono::milliseconds SERVER_SLEEP(10);

constexpr std::chrono::milliseconds WORLD_SLEEP(1000);
constexpr std::size_t MAX_ALLOCATED_MSG_INSTANCES = 10;

constexpr std::chrono::milliseconds USER_SYNC_SLEEP(1000);

constexpr double pi = 3.14159265359;
